<?php

namespace AppBundle\Repository;
use Doctrine\Common\Collections;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function findUser($username)
    {
        $result =  $this->createQueryBuilder('users')
            ->andWhere('users.username=:username')
            ->andWhere('users.isActive = :isActive')
            ->setParameter('isActive', 1)
            ->setParameter('username', $username)
            ->getQuery()
            ->getOneOrNullResult();
        return $result;
    }

    public function checkUser($username){
       // SELECT p.id profile_id,u.id user_id FROM profiles p LEFT JOIN users u ON p.user_id = u.id WHERE u.username = 'rajesh@gmail.com' OR p.email = 'rajesh@gmail.com'
    }

    public function findAllMyPagination($currentPage=1,$column,$parameter,$ordertype, $limit)
    {
        
        /* $this->getEntityManager()
        ->createQueryBuilder()
        ->select('r')
        ->from('AppBundle:User', 'r')
        ->innerJoin('r.id','rg')
        ->innerJoin('p.users','u')
        ->where('u.id = :user_id')
        ->setParameter('user_id', $user->getId())
        ->getQuery()
        ->getResult(); */

        if($parameter != '' || $column != '')
        {
            $query =  $this->createQueryBuilder('users')
            ->select('users.id')
            ->innerJoin('AppBundle:Profile', 'co', 'WITH', 'co.userId = users.id')
            ->where('co.fname LIKE :parameter OR co.email LIKE :parameter')
            ->setParameter('parameter', '%'.$parameter.'%')
            ->orderBy('co.'.$column, $ordertype)        
            ->getQuery();
        }
        else
        {
            $query =  $this->createQueryBuilder('users')
            ->select('users.id')
            ->innerJoin('AppBundle:Profile', 'co', 'WITH', 'co.userId = users.id')
            ->orderBy('co.fname', $ordertype)        
            ->getQuery();
        }

        //var_dump($query->getSql());

        $query->setFirstResult($limit * ($currentPage - 1)) // Offset
            ->setMaxResults($limit); // Limit
        
        $result = $query->getResult();
        return $result;
    }

    public function countAllData()
    {
        $query= $this->getEntityManager()
            ->createQuery( 'SELECT  count(a.id) FROM AppBundle:User a' );
           
        $count = $query->getSingleScalarResult();;
        return $count;
    }

}
